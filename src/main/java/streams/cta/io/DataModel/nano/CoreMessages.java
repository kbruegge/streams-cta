// Generated by the protocol buffer compiler.  DO NOT EDIT!

package streams.cta.io.datamodel.nano;

@SuppressWarnings("hiding")
public interface CoreMessages {

  // enum MessageType
  public static final int EMPTY_MESSAGE = -2;
  public static final int END_OF_STREAM = -1;
  public static final int NO_TYPE = 0;
  public static final int ANY_ARRAY = 1;
  public static final int WAVEFORM_DATA = 2;
  public static final int INTEGRAL_DATA = 3;
  public static final int PIXELS_CHANNEL = 4;
  public static final int CAMERA_TRIGGER = 5;
  public static final int ARRAY_TRIGGER = 6;
  public static final int CAMERA_RUN_HEADER = 7;
  public static final int CAMERA_EVENT = 8;
  public static final int ARRAY_EVENT = 9;
  public static final int THROUGHPUT_STATS = 10;
  public static final int SERVER_ANNOUNCEMENT = 11;
  public static final int MESSAGE_WRAPPER = 12;
  public static final int RAW_CAMERA_DATA = 13;
  public static final int PACKETLIB_DATA = 14;

  public static final class ThroughputStats extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ThroughputStats[] _emptyArray;
    public static ThroughputStats[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ThroughputStats[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string origin = 1;
    public java.lang.String origin;

    // optional int32 port = 2;
    public int port;

    // optional string dest = 3;
    public java.lang.String dest;

    // optional int32 num_bytes = 4;
    public int numBytes;

    // optional int32 elapsed_us = 5;
    public int elapsedUs;

    // optional string comment = 6;
    public java.lang.String comment;

    public ThroughputStats() {
      clear();
    }

    public ThroughputStats clear() {
      origin = "";
      port = 0;
      dest = "";
      numBytes = 0;
      elapsedUs = 0;
      comment = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.origin.equals("")) {
        output.writeString(1, this.origin);
      }
      if (this.port != 0) {
        output.writeInt32(2, this.port);
      }
      if (!this.dest.equals("")) {
        output.writeString(3, this.dest);
      }
      if (this.numBytes != 0) {
        output.writeInt32(4, this.numBytes);
      }
      if (this.elapsedUs != 0) {
        output.writeInt32(5, this.elapsedUs);
      }
      if (!this.comment.equals("")) {
        output.writeString(6, this.comment);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.origin.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.origin);
      }
      if (this.port != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(2, this.port);
      }
      if (!this.dest.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.dest);
      }
      if (this.numBytes != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(4, this.numBytes);
      }
      if (this.elapsedUs != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(5, this.elapsedUs);
      }
      if (!this.comment.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(6, this.comment);
      }
      return size;
    }

    @Override
    public ThroughputStats mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.origin = input.readString();
            break;
          }
          case 16: {
            this.port = input.readInt32();
            break;
          }
          case 26: {
            this.dest = input.readString();
            break;
          }
          case 32: {
            this.numBytes = input.readInt32();
            break;
          }
          case 40: {
            this.elapsedUs = input.readInt32();
            break;
          }
          case 50: {
            this.comment = input.readString();
            break;
          }
        }
      }
    }

    public static ThroughputStats parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ThroughputStats(), data);
    }

    public static ThroughputStats parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ThroughputStats().mergeFrom(input);
    }
  }

  public static final class ServerAnnouncement extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ServerAnnouncement[] _emptyArray;
    public static ServerAnnouncement[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ServerAnnouncement[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string name = 1;
    public java.lang.String name;

    // optional string host = 2;
    public java.lang.String host;

    // optional int32 port = 3;
    public int port;

    public ServerAnnouncement() {
      clear();
    }

    public ServerAnnouncement clear() {
      name = "";
      host = "";
      port = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.name.equals("")) {
        output.writeString(1, this.name);
      }
      if (!this.host.equals("")) {
        output.writeString(2, this.host);
      }
      if (this.port != 0) {
        output.writeInt32(3, this.port);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.name.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.name);
      }
      if (!this.host.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.host);
      }
      if (this.port != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(3, this.port);
      }
      return size;
    }

    @Override
    public ServerAnnouncement mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.name = input.readString();
            break;
          }
          case 18: {
            this.host = input.readString();
            break;
          }
          case 24: {
            this.port = input.readInt32();
            break;
          }
        }
      }
    }

    public static ServerAnnouncement parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ServerAnnouncement(), data);
    }

    public static ServerAnnouncement parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ServerAnnouncement().mergeFrom(input);
    }
  }

  public static final class CTAMessage extends
      com.google.protobuf.nano.MessageNano {

    private static volatile CTAMessage[] _emptyArray;
    public static CTAMessage[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new CTAMessage[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .streams.cta.io.datamodel.MessageType payload_type = 1;
    public int[] payloadType;

    // optional string source_name = 2 [default = ""];
    public java.lang.String sourceName;

    // optional sfixed32 message_count = 3 [default = -1];
    public int messageCount;

    // repeated bytes payload_data = 4;
    public byte[][] payloadData;

    public CTAMessage() {
      clear();
    }

    public CTAMessage clear() {
      payloadType = com.google.protobuf.nano.WireFormatNano.EMPTY_INT_ARRAY;
      sourceName = "";
      messageCount = -1;
      payloadData = com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES_ARRAY;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.payloadType != null && this.payloadType.length > 0) {
        for (int i = 0; i < this.payloadType.length; i++) {
          output.writeInt32(1, this.payloadType[i]);
        }
      }
      if (!this.sourceName.equals("")) {
        output.writeString(2, this.sourceName);
      }
      if (this.messageCount != -1) {
        output.writeSFixed32(3, this.messageCount);
      }
      if (this.payloadData != null && this.payloadData.length > 0) {
        for (int i = 0; i < this.payloadData.length; i++) {
          byte[] element = this.payloadData[i];
          if (element != null) {
            output.writeBytes(4, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.payloadType != null && this.payloadType.length > 0) {
        int dataSize = 0;
        for (int i = 0; i < this.payloadType.length; i++) {
          int element = this.payloadType[i];
          dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * this.payloadType.length;
      }
      if (!this.sourceName.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.sourceName);
      }
      if (this.messageCount != -1) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeSFixed32Size(3, this.messageCount);
      }
      if (this.payloadData != null && this.payloadData.length > 0) {
        int dataCount = 0;
        int dataSize = 0;
        for (int i = 0; i < this.payloadData.length; i++) {
          byte[] element = this.payloadData[i];
          if (element != null) {
            dataCount++;
            dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeBytesSizeNoTag(element);
          }
        }
        size += dataSize;
        size += 1 * dataCount;
      }
      return size;
    }

    @Override
    public CTAMessage mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int length = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 8);
            int[] validValues = new int[length];
            int validCount = 0;
            for (int i = 0; i < length; i++) {
              if (i != 0) { // tag for first value already consumed.
                input.readTag();
              }
              int value = input.readInt32();
              switch (value) {
                case streams.cta.io.datamodel.nano.CoreMessages.EMPTY_MESSAGE:
                case streams.cta.io.datamodel.nano.CoreMessages.END_OF_STREAM:
                case streams.cta.io.datamodel.nano.CoreMessages.NO_TYPE:
                case streams.cta.io.datamodel.nano.CoreMessages.ANY_ARRAY:
                case streams.cta.io.datamodel.nano.CoreMessages.WAVEFORM_DATA:
                case streams.cta.io.datamodel.nano.CoreMessages.INTEGRAL_DATA:
                case streams.cta.io.datamodel.nano.CoreMessages.PIXELS_CHANNEL:
                case streams.cta.io.datamodel.nano.CoreMessages.CAMERA_TRIGGER:
                case streams.cta.io.datamodel.nano.CoreMessages.ARRAY_TRIGGER:
                case streams.cta.io.datamodel.nano.CoreMessages.CAMERA_RUN_HEADER:
                case streams.cta.io.datamodel.nano.CoreMessages.CAMERA_EVENT:
                case streams.cta.io.datamodel.nano.CoreMessages.ARRAY_EVENT:
                case streams.cta.io.datamodel.nano.CoreMessages.THROUGHPUT_STATS:
                case streams.cta.io.datamodel.nano.CoreMessages.SERVER_ANNOUNCEMENT:
                case streams.cta.io.datamodel.nano.CoreMessages.MESSAGE_WRAPPER:
                case streams.cta.io.datamodel.nano.CoreMessages.RAW_CAMERA_DATA:
                case streams.cta.io.datamodel.nano.CoreMessages.PACKETLIB_DATA:
                  validValues[validCount++] = value;
                  break;
              }
            }
            if (validCount != 0) {
              int i = this.payloadType == null ? 0 : this.payloadType.length;
              if (i == 0 && validCount == validValues.length) {
                this.payloadType = validValues;
              } else {
                int[] newArray = new int[i + validCount];
                if (i != 0) {
                  java.lang.System.arraycopy(this.payloadType, 0, newArray, 0, i);
                }
                java.lang.System.arraycopy(validValues, 0, newArray, i, validCount);
                this.payloadType = newArray;
              }
            }
            break;
          }
          case 10: {
            int bytes = input.readRawVarint32();
            int limit = input.pushLimit(bytes);
            // First pass to compute array length.
            int arrayLength = 0;
            int startPos = input.getPosition();
            while (input.getBytesUntilLimit() > 0) {
              switch (input.readInt32()) {
                case streams.cta.io.datamodel.nano.CoreMessages.EMPTY_MESSAGE:
                case streams.cta.io.datamodel.nano.CoreMessages.END_OF_STREAM:
                case streams.cta.io.datamodel.nano.CoreMessages.NO_TYPE:
                case streams.cta.io.datamodel.nano.CoreMessages.ANY_ARRAY:
                case streams.cta.io.datamodel.nano.CoreMessages.WAVEFORM_DATA:
                case streams.cta.io.datamodel.nano.CoreMessages.INTEGRAL_DATA:
                case streams.cta.io.datamodel.nano.CoreMessages.PIXELS_CHANNEL:
                case streams.cta.io.datamodel.nano.CoreMessages.CAMERA_TRIGGER:
                case streams.cta.io.datamodel.nano.CoreMessages.ARRAY_TRIGGER:
                case streams.cta.io.datamodel.nano.CoreMessages.CAMERA_RUN_HEADER:
                case streams.cta.io.datamodel.nano.CoreMessages.CAMERA_EVENT:
                case streams.cta.io.datamodel.nano.CoreMessages.ARRAY_EVENT:
                case streams.cta.io.datamodel.nano.CoreMessages.THROUGHPUT_STATS:
                case streams.cta.io.datamodel.nano.CoreMessages.SERVER_ANNOUNCEMENT:
                case streams.cta.io.datamodel.nano.CoreMessages.MESSAGE_WRAPPER:
                case streams.cta.io.datamodel.nano.CoreMessages.RAW_CAMERA_DATA:
                case streams.cta.io.datamodel.nano.CoreMessages.PACKETLIB_DATA:
                  arrayLength++;
                  break;
              }
            }
            if (arrayLength != 0) {
              input.rewindToPosition(startPos);
              int i = this.payloadType == null ? 0 : this.payloadType.length;
              int[] newArray = new int[i + arrayLength];
              if (i != 0) {
                java.lang.System.arraycopy(this.payloadType, 0, newArray, 0, i);
              }
              while (input.getBytesUntilLimit() > 0) {
                int value = input.readInt32();
                switch (value) {
                  case streams.cta.io.datamodel.nano.CoreMessages.EMPTY_MESSAGE:
                  case streams.cta.io.datamodel.nano.CoreMessages.END_OF_STREAM:
                  case streams.cta.io.datamodel.nano.CoreMessages.NO_TYPE:
                  case streams.cta.io.datamodel.nano.CoreMessages.ANY_ARRAY:
                  case streams.cta.io.datamodel.nano.CoreMessages.WAVEFORM_DATA:
                  case streams.cta.io.datamodel.nano.CoreMessages.INTEGRAL_DATA:
                  case streams.cta.io.datamodel.nano.CoreMessages.PIXELS_CHANNEL:
                  case streams.cta.io.datamodel.nano.CoreMessages.CAMERA_TRIGGER:
                  case streams.cta.io.datamodel.nano.CoreMessages.ARRAY_TRIGGER:
                  case streams.cta.io.datamodel.nano.CoreMessages.CAMERA_RUN_HEADER:
                  case streams.cta.io.datamodel.nano.CoreMessages.CAMERA_EVENT:
                  case streams.cta.io.datamodel.nano.CoreMessages.ARRAY_EVENT:
                  case streams.cta.io.datamodel.nano.CoreMessages.THROUGHPUT_STATS:
                  case streams.cta.io.datamodel.nano.CoreMessages.SERVER_ANNOUNCEMENT:
                  case streams.cta.io.datamodel.nano.CoreMessages.MESSAGE_WRAPPER:
                  case streams.cta.io.datamodel.nano.CoreMessages.RAW_CAMERA_DATA:
                  case streams.cta.io.datamodel.nano.CoreMessages.PACKETLIB_DATA:
                    newArray[i++] = value;
                    break;
                }
              }
              this.payloadType = newArray;
            }
            input.popLimit(limit);
            break;
          }
          case 18: {
            this.sourceName = input.readString();
            break;
          }
          case 29: {
            this.messageCount = input.readSFixed32();
            break;
          }
          case 34: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 34);
            int i = this.payloadData == null ? 0 : this.payloadData.length;
            byte[][] newArray = new byte[i + arrayLength][];
            if (i != 0) {
              java.lang.System.arraycopy(this.payloadData, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readBytes();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readBytes();
            this.payloadData = newArray;
            break;
          }
        }
      }
    }

    public static CTAMessage parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new CTAMessage(), data);
    }

    public static CTAMessage parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new CTAMessage().mergeFrom(input);
    }
  }

  public static final class AnyArray extends
      com.google.protobuf.nano.MessageNano {

    // enum ItemType
    public static final int NONE = 0;
    public static final int S8 = 1;
    public static final int U8 = 2;
    public static final int S16 = 3;
    public static final int U16 = 4;
    public static final int S32 = 5;
    public static final int U32 = 6;
    public static final int S64 = 7;
    public static final int U64 = 8;
    public static final int FLOAT = 9;
    public static final int DOUBLE = 10;
    public static final int BOOL = 11;

    // enum CompType
    public static final int RAW = 0;
    public static final int ZLIB = 1;
    public static final int LZO = 2;
    public static final int RICE = 3;
    public static final int ZRICE = 4;
    public static final int LZORICE = 5;

    private static volatile AnyArray[] _emptyArray;
    public static AnyArray[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new AnyArray[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional .streams.cta.io.datamodel.AnyArray.ItemType type = 1 [default = NONE];
    public int type;

    // optional .streams.cta.io.datamodel.AnyArray.CompType current_comp = 2 [default = RAW];
    public int currentComp;

    // optional .streams.cta.io.datamodel.AnyArray.CompType desired_comp = 3 [default = RAW];
    public int desiredComp;

    // optional bytes data = 4;
    public byte[] data;

    public AnyArray() {
      clear();
    }

    public AnyArray clear() {
      type = streams.cta.io.datamodel.nano.CoreMessages.AnyArray.NONE;
      currentComp = streams.cta.io.datamodel.nano.CoreMessages.AnyArray.RAW;
      desiredComp = streams.cta.io.datamodel.nano.CoreMessages.AnyArray.RAW;
      data = com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.type != streams.cta.io.datamodel.nano.CoreMessages.AnyArray.NONE) {
        output.writeInt32(1, this.type);
      }
      if (this.currentComp != streams.cta.io.datamodel.nano.CoreMessages.AnyArray.RAW) {
        output.writeInt32(2, this.currentComp);
      }
      if (this.desiredComp != streams.cta.io.datamodel.nano.CoreMessages.AnyArray.RAW) {
        output.writeInt32(3, this.desiredComp);
      }
      if (!java.util.Arrays.equals(this.data, com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
        output.writeBytes(4, this.data);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.type != streams.cta.io.datamodel.nano.CoreMessages.AnyArray.NONE) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.type);
      }
      if (this.currentComp != streams.cta.io.datamodel.nano.CoreMessages.AnyArray.RAW) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(2, this.currentComp);
      }
      if (this.desiredComp != streams.cta.io.datamodel.nano.CoreMessages.AnyArray.RAW) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(3, this.desiredComp);
      }
      if (!java.util.Arrays.equals(this.data, com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(4, this.data);
      }
      return size;
    }

    @Override
    public AnyArray mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case streams.cta.io.datamodel.nano.CoreMessages.AnyArray.NONE:
              case streams.cta.io.datamodel.nano.CoreMessages.AnyArray.S8:
              case streams.cta.io.datamodel.nano.CoreMessages.AnyArray.U8:
              case streams.cta.io.datamodel.nano.CoreMessages.AnyArray.S16:
              case streams.cta.io.datamodel.nano.CoreMessages.AnyArray.U16:
              case streams.cta.io.datamodel.nano.CoreMessages.AnyArray.S32:
              case streams.cta.io.datamodel.nano.CoreMessages.AnyArray.U32:
              case streams.cta.io.datamodel.nano.CoreMessages.AnyArray.S64:
              case streams.cta.io.datamodel.nano.CoreMessages.AnyArray.U64:
              case streams.cta.io.datamodel.nano.CoreMessages.AnyArray.FLOAT:
              case streams.cta.io.datamodel.nano.CoreMessages.AnyArray.DOUBLE:
              case streams.cta.io.datamodel.nano.CoreMessages.AnyArray.BOOL:
                this.type = value;
                break;
            }
            break;
          }
          case 16: {
            int value = input.readInt32();
            switch (value) {
              case streams.cta.io.datamodel.nano.CoreMessages.AnyArray.RAW:
              case streams.cta.io.datamodel.nano.CoreMessages.AnyArray.ZLIB:
              case streams.cta.io.datamodel.nano.CoreMessages.AnyArray.LZO:
              case streams.cta.io.datamodel.nano.CoreMessages.AnyArray.RICE:
              case streams.cta.io.datamodel.nano.CoreMessages.AnyArray.ZRICE:
              case streams.cta.io.datamodel.nano.CoreMessages.AnyArray.LZORICE:
                this.currentComp = value;
                break;
            }
            break;
          }
          case 24: {
            int value = input.readInt32();
            switch (value) {
              case streams.cta.io.datamodel.nano.CoreMessages.AnyArray.RAW:
              case streams.cta.io.datamodel.nano.CoreMessages.AnyArray.ZLIB:
              case streams.cta.io.datamodel.nano.CoreMessages.AnyArray.LZO:
              case streams.cta.io.datamodel.nano.CoreMessages.AnyArray.RICE:
              case streams.cta.io.datamodel.nano.CoreMessages.AnyArray.ZRICE:
              case streams.cta.io.datamodel.nano.CoreMessages.AnyArray.LZORICE:
                this.desiredComp = value;
                break;
            }
            break;
          }
          case 34: {
            this.data = input.readBytes();
            break;
          }
        }
      }
    }

    public static AnyArray parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new AnyArray(), data);
    }

    public static AnyArray parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new AnyArray().mergeFrom(input);
    }
  }
}
