// Generated by the protocol buffer compiler.  DO NOT EDIT!

package streams.cta.io.datamodel.nano;

@SuppressWarnings("hiding")
public interface L0 {

  // enum ImgReducMode
  public static final int NO_IMG_REDUC = 0;
  public static final int ZERO_SUPPR = 1;
  public static final int INTEGRATION = 2;
  public static final int INTEG_AND_ZERO_SUPPR = 3;

  // enum EvtsReducMode
  public static final int NO_EVT_REDUC = 0;
  public static final int TIME_COINCIDENCE = 1;
  public static final int IMAGE_PARAMS = 2;
  public static final int HIGH_LEVEL_ANA = 3;

  // enum EventType
  public static final int NONE = 0;
  public static final int PHYSICAL = 1;
  public static final int PEDESTAL = 2;
  public static final int LIGHT_PULSER = 3;

  public static final class WaveFormData extends
      com.google.protobuf.nano.MessageNano {

    private static volatile WaveFormData[] _emptyArray;
    public static WaveFormData[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new WaveFormData[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional .streams.cta.io.datamodel.AnyArray samples = 1;
    public streams.cta.io.datamodel.nano.CoreMessages.AnyArray samples;

    // optional .streams.cta.io.datamodel.AnyArray pixelsIndices = 2;
    public streams.cta.io.datamodel.nano.CoreMessages.AnyArray pixelsIndices;

    // optional .streams.cta.io.datamodel.AnyArray firstSplIdx = 3;
    public streams.cta.io.datamodel.nano.CoreMessages.AnyArray firstSplIdx;

    // optional fixed32 num_samples = 4 [default = 0];
    public int numSamples;

    public WaveFormData() {
      clear();
    }

    public WaveFormData clear() {
      samples = null;
      pixelsIndices = null;
      firstSplIdx = null;
      numSamples = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.samples != null) {
        output.writeMessage(1, this.samples);
      }
      if (this.pixelsIndices != null) {
        output.writeMessage(2, this.pixelsIndices);
      }
      if (this.firstSplIdx != null) {
        output.writeMessage(3, this.firstSplIdx);
      }
      if (this.numSamples != 0) {
        output.writeFixed32(4, this.numSamples);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.samples != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(1, this.samples);
      }
      if (this.pixelsIndices != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(2, this.pixelsIndices);
      }
      if (this.firstSplIdx != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(3, this.firstSplIdx);
      }
      if (this.numSamples != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFixed32Size(4, this.numSamples);
      }
      return size;
    }

    @Override
    public WaveFormData mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            if (this.samples == null) {
              this.samples = new streams.cta.io.datamodel.nano.CoreMessages.AnyArray();
            }
            input.readMessage(this.samples);
            break;
          }
          case 18: {
            if (this.pixelsIndices == null) {
              this.pixelsIndices = new streams.cta.io.datamodel.nano.CoreMessages.AnyArray();
            }
            input.readMessage(this.pixelsIndices);
            break;
          }
          case 26: {
            if (this.firstSplIdx == null) {
              this.firstSplIdx = new streams.cta.io.datamodel.nano.CoreMessages.AnyArray();
            }
            input.readMessage(this.firstSplIdx);
            break;
          }
          case 37: {
            this.numSamples = input.readFixed32();
            break;
          }
        }
      }
    }

    public static WaveFormData parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new WaveFormData(), data);
    }

    public static WaveFormData parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new WaveFormData().mergeFrom(input);
    }
  }

  public static final class IntegralData extends
      com.google.protobuf.nano.MessageNano {

    private static volatile IntegralData[] _emptyArray;
    public static IntegralData[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new IntegralData[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional .streams.cta.io.datamodel.AnyArray gains = 1;
    public streams.cta.io.datamodel.nano.CoreMessages.AnyArray gains;

    // optional .streams.cta.io.datamodel.AnyArray maximumTimes = 2;
    public streams.cta.io.datamodel.nano.CoreMessages.AnyArray maximumTimes;

    // optional .streams.cta.io.datamodel.AnyArray tailTimes = 3;
    public streams.cta.io.datamodel.nano.CoreMessages.AnyArray tailTimes;

    // optional .streams.cta.io.datamodel.AnyArray raiseTimes = 4;
    public streams.cta.io.datamodel.nano.CoreMessages.AnyArray raiseTimes;

    // optional .streams.cta.io.datamodel.AnyArray pixelsIndices = 5;
    public streams.cta.io.datamodel.nano.CoreMessages.AnyArray pixelsIndices;

    // optional .streams.cta.io.datamodel.AnyArray firstSplIdx = 6;
    public streams.cta.io.datamodel.nano.CoreMessages.AnyArray firstSplIdx;

    public IntegralData() {
      clear();
    }

    public IntegralData clear() {
      gains = null;
      maximumTimes = null;
      tailTimes = null;
      raiseTimes = null;
      pixelsIndices = null;
      firstSplIdx = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.gains != null) {
        output.writeMessage(1, this.gains);
      }
      if (this.maximumTimes != null) {
        output.writeMessage(2, this.maximumTimes);
      }
      if (this.tailTimes != null) {
        output.writeMessage(3, this.tailTimes);
      }
      if (this.raiseTimes != null) {
        output.writeMessage(4, this.raiseTimes);
      }
      if (this.pixelsIndices != null) {
        output.writeMessage(5, this.pixelsIndices);
      }
      if (this.firstSplIdx != null) {
        output.writeMessage(6, this.firstSplIdx);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.gains != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(1, this.gains);
      }
      if (this.maximumTimes != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(2, this.maximumTimes);
      }
      if (this.tailTimes != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(3, this.tailTimes);
      }
      if (this.raiseTimes != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(4, this.raiseTimes);
      }
      if (this.pixelsIndices != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(5, this.pixelsIndices);
      }
      if (this.firstSplIdx != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(6, this.firstSplIdx);
      }
      return size;
    }

    @Override
    public IntegralData mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            if (this.gains == null) {
              this.gains = new streams.cta.io.datamodel.nano.CoreMessages.AnyArray();
            }
            input.readMessage(this.gains);
            break;
          }
          case 18: {
            if (this.maximumTimes == null) {
              this.maximumTimes = new streams.cta.io.datamodel.nano.CoreMessages.AnyArray();
            }
            input.readMessage(this.maximumTimes);
            break;
          }
          case 26: {
            if (this.tailTimes == null) {
              this.tailTimes = new streams.cta.io.datamodel.nano.CoreMessages.AnyArray();
            }
            input.readMessage(this.tailTimes);
            break;
          }
          case 34: {
            if (this.raiseTimes == null) {
              this.raiseTimes = new streams.cta.io.datamodel.nano.CoreMessages.AnyArray();
            }
            input.readMessage(this.raiseTimes);
            break;
          }
          case 42: {
            if (this.pixelsIndices == null) {
              this.pixelsIndices = new streams.cta.io.datamodel.nano.CoreMessages.AnyArray();
            }
            input.readMessage(this.pixelsIndices);
            break;
          }
          case 50: {
            if (this.firstSplIdx == null) {
              this.firstSplIdx = new streams.cta.io.datamodel.nano.CoreMessages.AnyArray();
            }
            input.readMessage(this.firstSplIdx);
            break;
          }
        }
      }
    }

    public static IntegralData parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new IntegralData(), data);
    }

    public static IntegralData parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new IntegralData().mergeFrom(input);
    }
  }

  public static final class PixelsChannel extends
      com.google.protobuf.nano.MessageNano {

    private static volatile PixelsChannel[] _emptyArray;
    public static PixelsChannel[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PixelsChannel[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional .streams.cta.io.datamodel.WaveFormData waveforms = 1;
    public streams.cta.io.datamodel.nano.L0.WaveFormData waveforms;

    // optional .streams.cta.io.datamodel.IntegralData integrals = 2;
    public streams.cta.io.datamodel.nano.L0.IntegralData integrals;

    public PixelsChannel() {
      clear();
    }

    public PixelsChannel clear() {
      waveforms = null;
      integrals = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.waveforms != null) {
        output.writeMessage(1, this.waveforms);
      }
      if (this.integrals != null) {
        output.writeMessage(2, this.integrals);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.waveforms != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(1, this.waveforms);
      }
      if (this.integrals != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(2, this.integrals);
      }
      return size;
    }

    @Override
    public PixelsChannel mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            if (this.waveforms == null) {
              this.waveforms = new streams.cta.io.datamodel.nano.L0.WaveFormData();
            }
            input.readMessage(this.waveforms);
            break;
          }
          case 18: {
            if (this.integrals == null) {
              this.integrals = new streams.cta.io.datamodel.nano.L0.IntegralData();
            }
            input.readMessage(this.integrals);
            break;
          }
        }
      }
    }

    public static PixelsChannel parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PixelsChannel(), data);
    }

    public static PixelsChannel parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PixelsChannel().mergeFrom(input);
    }
  }

  public static final class CameraTrigger extends
      com.google.protobuf.nano.MessageNano {

    private static volatile CameraTrigger[] _emptyArray;
    public static CameraTrigger[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new CameraTrigger[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional sfixed32 telescopeID = 1 [default = 0];
    public int telescopeID;

    // optional sfixed64 timeSec = 2 [default = 0];
    public long timeSec;

    // optional sfixed64 timeNanoSec = 3 [default = 0];
    public long timeNanoSec;

    // optional fixed32 eventNumber = 4 [default = 0];
    public int eventNumber;

    public CameraTrigger() {
      clear();
    }

    public CameraTrigger clear() {
      telescopeID = 0;
      timeSec = 0L;
      timeNanoSec = 0L;
      eventNumber = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.telescopeID != 0) {
        output.writeSFixed32(1, this.telescopeID);
      }
      if (this.timeSec != 0L) {
        output.writeSFixed64(2, this.timeSec);
      }
      if (this.timeNanoSec != 0L) {
        output.writeSFixed64(3, this.timeNanoSec);
      }
      if (this.eventNumber != 0) {
        output.writeFixed32(4, this.eventNumber);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.telescopeID != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeSFixed32Size(1, this.telescopeID);
      }
      if (this.timeSec != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeSFixed64Size(2, this.timeSec);
      }
      if (this.timeNanoSec != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeSFixed64Size(3, this.timeNanoSec);
      }
      if (this.eventNumber != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFixed32Size(4, this.eventNumber);
      }
      return size;
    }

    @Override
    public CameraTrigger mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 13: {
            this.telescopeID = input.readSFixed32();
            break;
          }
          case 17: {
            this.timeSec = input.readSFixed64();
            break;
          }
          case 25: {
            this.timeNanoSec = input.readSFixed64();
            break;
          }
          case 37: {
            this.eventNumber = input.readFixed32();
            break;
          }
        }
      }
    }

    public static CameraTrigger parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new CameraTrigger(), data);
    }

    public static CameraTrigger parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new CameraTrigger().mergeFrom(input);
    }
  }

  public static final class ArrayTrigger extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ArrayTrigger[] _emptyArray;
    public static ArrayTrigger[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ArrayTrigger[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional fixed32 arrayEvtNum = 1 [default = 0];
    public int arrayEvtNum;

    // optional fixed32 num_cameras = 2;
    public int numCameras;

    // repeated .streams.cta.io.datamodel.CameraTrigger cameras = 3;
    public streams.cta.io.datamodel.nano.L0.CameraTrigger[] cameras;

    public ArrayTrigger() {
      clear();
    }

    public ArrayTrigger clear() {
      arrayEvtNum = 0;
      numCameras = 0;
      cameras = streams.cta.io.datamodel.nano.L0.CameraTrigger.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.arrayEvtNum != 0) {
        output.writeFixed32(1, this.arrayEvtNum);
      }
      if (this.numCameras != 0) {
        output.writeFixed32(2, this.numCameras);
      }
      if (this.cameras != null && this.cameras.length > 0) {
        for (int i = 0; i < this.cameras.length; i++) {
          streams.cta.io.datamodel.nano.L0.CameraTrigger element = this.cameras[i];
          if (element != null) {
            output.writeMessage(3, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.arrayEvtNum != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFixed32Size(1, this.arrayEvtNum);
      }
      if (this.numCameras != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFixed32Size(2, this.numCameras);
      }
      if (this.cameras != null && this.cameras.length > 0) {
        for (int i = 0; i < this.cameras.length; i++) {
          streams.cta.io.datamodel.nano.L0.CameraTrigger element = this.cameras[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(3, element);
          }
        }
      }
      return size;
    }

    @Override
    public ArrayTrigger mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 13: {
            this.arrayEvtNum = input.readFixed32();
            break;
          }
          case 21: {
            this.numCameras = input.readFixed32();
            break;
          }
          case 26: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 26);
            int i = this.cameras == null ? 0 : this.cameras.length;
            streams.cta.io.datamodel.nano.L0.CameraTrigger[] newArray =
                new streams.cta.io.datamodel.nano.L0.CameraTrigger[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.cameras, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new streams.cta.io.datamodel.nano.L0.CameraTrigger();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new streams.cta.io.datamodel.nano.L0.CameraTrigger();
            input.readMessage(newArray[i]);
            this.cameras = newArray;
            break;
          }
        }
      }
    }

    public static ArrayTrigger parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ArrayTrigger(), data);
    }

    public static ArrayTrigger parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ArrayTrigger().mergeFrom(input);
    }
  }

  public static final class CameraRunHeader extends
      com.google.protobuf.nano.MessageNano {

    private static volatile CameraRunHeader[] _emptyArray;
    public static CameraRunHeader[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new CameraRunHeader[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional sfixed32 telescopeID = 1 [default = -1];
    public int telescopeID;

    // optional fixed32 runNumber = 2 [default = 0];
    public int runNumber;

    // optional fixed32 dateMJD = 3 [default = 0];
    public int dateMJD;

    // optional fixed64 timeNanoSec = 4 [default = 0];
    public long timeNanoSec;

    // optional .streams.cta.io.datamodel.ImgReducMode imgReducMode = 5 [default = NO_IMG_REDUC];
    public int imgReducMode;

    // optional .streams.cta.io.datamodel.EvtsReducMode evtsReducMode = 6 [default = NO_EVT_REDUC];
    public int evtsReducMode;

    // optional sfixed32 numTraces = 7 [default = -1];
    public int numTraces;

    // optional sfixed32 numGainChannels = 8 [default = -1];
    public int numGainChannels;

    // optional sfixed32 integWindowSize = 9 [default = -1];
    public int integWindowSize;

    // optional sfixed32 integThreshold = 10 [default = -1];
    public int integThreshold;

    // optional sfixed32 zeroSuppThreshold = 11 [default = -1];
    public int zeroSuppThreshold;

    public CameraRunHeader() {
      clear();
    }

    public CameraRunHeader clear() {
      telescopeID = -1;
      runNumber = 0;
      dateMJD = 0;
      timeNanoSec = 0L;
      imgReducMode = streams.cta.io.datamodel.nano.L0.NO_IMG_REDUC;
      evtsReducMode = streams.cta.io.datamodel.nano.L0.NO_EVT_REDUC;
      numTraces = -1;
      numGainChannels = -1;
      integWindowSize = -1;
      integThreshold = -1;
      zeroSuppThreshold = -1;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.telescopeID != -1) {
        output.writeSFixed32(1, this.telescopeID);
      }
      if (this.runNumber != 0) {
        output.writeFixed32(2, this.runNumber);
      }
      if (this.dateMJD != 0) {
        output.writeFixed32(3, this.dateMJD);
      }
      if (this.timeNanoSec != 0L) {
        output.writeFixed64(4, this.timeNanoSec);
      }
      if (this.imgReducMode != streams.cta.io.datamodel.nano.L0.NO_IMG_REDUC) {
        output.writeInt32(5, this.imgReducMode);
      }
      if (this.evtsReducMode != streams.cta.io.datamodel.nano.L0.NO_EVT_REDUC) {
        output.writeInt32(6, this.evtsReducMode);
      }
      if (this.numTraces != -1) {
        output.writeSFixed32(7, this.numTraces);
      }
      if (this.numGainChannels != -1) {
        output.writeSFixed32(8, this.numGainChannels);
      }
      if (this.integWindowSize != -1) {
        output.writeSFixed32(9, this.integWindowSize);
      }
      if (this.integThreshold != -1) {
        output.writeSFixed32(10, this.integThreshold);
      }
      if (this.zeroSuppThreshold != -1) {
        output.writeSFixed32(11, this.zeroSuppThreshold);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.telescopeID != -1) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeSFixed32Size(1, this.telescopeID);
      }
      if (this.runNumber != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFixed32Size(2, this.runNumber);
      }
      if (this.dateMJD != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFixed32Size(3, this.dateMJD);
      }
      if (this.timeNanoSec != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFixed64Size(4, this.timeNanoSec);
      }
      if (this.imgReducMode != streams.cta.io.datamodel.nano.L0.NO_IMG_REDUC) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(5, this.imgReducMode);
      }
      if (this.evtsReducMode != streams.cta.io.datamodel.nano.L0.NO_EVT_REDUC) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(6, this.evtsReducMode);
      }
      if (this.numTraces != -1) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeSFixed32Size(7, this.numTraces);
      }
      if (this.numGainChannels != -1) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeSFixed32Size(8, this.numGainChannels);
      }
      if (this.integWindowSize != -1) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeSFixed32Size(9, this.integWindowSize);
      }
      if (this.integThreshold != -1) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeSFixed32Size(10, this.integThreshold);
      }
      if (this.zeroSuppThreshold != -1) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeSFixed32Size(11, this.zeroSuppThreshold);
      }
      return size;
    }

    @Override
    public CameraRunHeader mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 13: {
            this.telescopeID = input.readSFixed32();
            break;
          }
          case 21: {
            this.runNumber = input.readFixed32();
            break;
          }
          case 29: {
            this.dateMJD = input.readFixed32();
            break;
          }
          case 33: {
            this.timeNanoSec = input.readFixed64();
            break;
          }
          case 40: {
            int value = input.readInt32();
            switch (value) {
              case streams.cta.io.datamodel.nano.L0.NO_IMG_REDUC:
              case streams.cta.io.datamodel.nano.L0.ZERO_SUPPR:
              case streams.cta.io.datamodel.nano.L0.INTEGRATION:
              case streams.cta.io.datamodel.nano.L0.INTEG_AND_ZERO_SUPPR:
                this.imgReducMode = value;
                break;
            }
            break;
          }
          case 48: {
            int value = input.readInt32();
            switch (value) {
              case streams.cta.io.datamodel.nano.L0.NO_EVT_REDUC:
              case streams.cta.io.datamodel.nano.L0.TIME_COINCIDENCE:
              case streams.cta.io.datamodel.nano.L0.IMAGE_PARAMS:
              case streams.cta.io.datamodel.nano.L0.HIGH_LEVEL_ANA:
                this.evtsReducMode = value;
                break;
            }
            break;
          }
          case 61: {
            this.numTraces = input.readSFixed32();
            break;
          }
          case 69: {
            this.numGainChannels = input.readSFixed32();
            break;
          }
          case 77: {
            this.integWindowSize = input.readSFixed32();
            break;
          }
          case 85: {
            this.integThreshold = input.readSFixed32();
            break;
          }
          case 93: {
            this.zeroSuppThreshold = input.readSFixed32();
            break;
          }
        }
      }
    }

    public static CameraRunHeader parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new CameraRunHeader(), data);
    }

    public static CameraRunHeader parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new CameraRunHeader().mergeFrom(input);
    }
  }

  public static final class CircleParams extends
      com.google.protobuf.nano.MessageNano {

    private static volatile CircleParams[] _emptyArray;
    public static CircleParams[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new CircleParams[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional double x = 1;
    public double x;

    // optional double y = 2;
    public double y;

    // optional double r = 3;
    public double r;

    public CircleParams() {
      clear();
    }

    public CircleParams clear() {
      x = 0D;
      y = 0D;
      r = 0D;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (java.lang.Double.doubleToLongBits(this.x)
          != java.lang.Double.doubleToLongBits(0D)) {
        output.writeDouble(1, this.x);
      }
      if (java.lang.Double.doubleToLongBits(this.y)
          != java.lang.Double.doubleToLongBits(0D)) {
        output.writeDouble(2, this.y);
      }
      if (java.lang.Double.doubleToLongBits(this.r)
          != java.lang.Double.doubleToLongBits(0D)) {
        output.writeDouble(3, this.r);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (java.lang.Double.doubleToLongBits(this.x)
          != java.lang.Double.doubleToLongBits(0D)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeDoubleSize(1, this.x);
      }
      if (java.lang.Double.doubleToLongBits(this.y)
          != java.lang.Double.doubleToLongBits(0D)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeDoubleSize(2, this.y);
      }
      if (java.lang.Double.doubleToLongBits(this.r)
          != java.lang.Double.doubleToLongBits(0D)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeDoubleSize(3, this.r);
      }
      return size;
    }

    @Override
    public CircleParams mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 9: {
            this.x = input.readDouble();
            break;
          }
          case 17: {
            this.y = input.readDouble();
            break;
          }
          case 25: {
            this.r = input.readDouble();
            break;
          }
        }
      }
    }

    public static CircleParams parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new CircleParams(), data);
    }

    public static CircleParams parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new CircleParams().mergeFrom(input);
    }
  }

  public static final class CameraLocation extends
      com.google.protobuf.nano.MessageNano {

    private static volatile CameraLocation[] _emptyArray;
    public static CameraLocation[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new CameraLocation[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional double x = 1;
    public double x;

    // optional double y = 2;
    public double y;

    // optional double z = 3;
    public double z;

    // optional double az = 4;
    public double az;

    // optional double alt = 5;
    public double alt;

    public CameraLocation() {
      clear();
    }

    public CameraLocation clear() {
      x = 0D;
      y = 0D;
      z = 0D;
      az = 0D;
      alt = 0D;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (java.lang.Double.doubleToLongBits(this.x)
          != java.lang.Double.doubleToLongBits(0D)) {
        output.writeDouble(1, this.x);
      }
      if (java.lang.Double.doubleToLongBits(this.y)
          != java.lang.Double.doubleToLongBits(0D)) {
        output.writeDouble(2, this.y);
      }
      if (java.lang.Double.doubleToLongBits(this.z)
          != java.lang.Double.doubleToLongBits(0D)) {
        output.writeDouble(3, this.z);
      }
      if (java.lang.Double.doubleToLongBits(this.az)
          != java.lang.Double.doubleToLongBits(0D)) {
        output.writeDouble(4, this.az);
      }
      if (java.lang.Double.doubleToLongBits(this.alt)
          != java.lang.Double.doubleToLongBits(0D)) {
        output.writeDouble(5, this.alt);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (java.lang.Double.doubleToLongBits(this.x)
          != java.lang.Double.doubleToLongBits(0D)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeDoubleSize(1, this.x);
      }
      if (java.lang.Double.doubleToLongBits(this.y)
          != java.lang.Double.doubleToLongBits(0D)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeDoubleSize(2, this.y);
      }
      if (java.lang.Double.doubleToLongBits(this.z)
          != java.lang.Double.doubleToLongBits(0D)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeDoubleSize(3, this.z);
      }
      if (java.lang.Double.doubleToLongBits(this.az)
          != java.lang.Double.doubleToLongBits(0D)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeDoubleSize(4, this.az);
      }
      if (java.lang.Double.doubleToLongBits(this.alt)
          != java.lang.Double.doubleToLongBits(0D)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeDoubleSize(5, this.alt);
      }
      return size;
    }

    @Override
    public CameraLocation mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 9: {
            this.x = input.readDouble();
            break;
          }
          case 17: {
            this.y = input.readDouble();
            break;
          }
          case 25: {
            this.z = input.readDouble();
            break;
          }
          case 33: {
            this.az = input.readDouble();
            break;
          }
          case 41: {
            this.alt = input.readDouble();
            break;
          }
        }
      }
    }

    public static CameraLocation parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new CameraLocation(), data);
    }

    public static CameraLocation parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new CameraLocation().mergeFrom(input);
    }
  }

  public static final class CameraGeometry extends
      com.google.protobuf.nano.MessageNano {

    private static volatile CameraGeometry[] _emptyArray;
    public static CameraGeometry[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new CameraGeometry[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .streams.cta.io.datamodel.CircleParams pixels = 1;
    public streams.cta.io.datamodel.nano.L0.CircleParams[] pixels;

    // optional double rotation = 2;
    public double rotation;

    // optional double foc_length = 3;
    public double focLength;

    // optional int32 num_mirrors = 4;
    public int numMirrors;

    // optional double mirror_area = 5;
    public double mirrorArea;

    // optional .streams.cta.io.datamodel.CameraLocation pointing = 6;
    public streams.cta.io.datamodel.nano.L0.CameraLocation pointing;

    // optional double sample_duration = 7;
    public double sampleDuration;

    public CameraGeometry() {
      clear();
    }

    public CameraGeometry clear() {
      pixels = streams.cta.io.datamodel.nano.L0.CircleParams.emptyArray();
      rotation = 0D;
      focLength = 0D;
      numMirrors = 0;
      mirrorArea = 0D;
      pointing = null;
      sampleDuration = 0D;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.pixels != null && this.pixels.length > 0) {
        for (int i = 0; i < this.pixels.length; i++) {
          streams.cta.io.datamodel.nano.L0.CircleParams element = this.pixels[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      if (java.lang.Double.doubleToLongBits(this.rotation)
          != java.lang.Double.doubleToLongBits(0D)) {
        output.writeDouble(2, this.rotation);
      }
      if (java.lang.Double.doubleToLongBits(this.focLength)
          != java.lang.Double.doubleToLongBits(0D)) {
        output.writeDouble(3, this.focLength);
      }
      if (this.numMirrors != 0) {
        output.writeInt32(4, this.numMirrors);
      }
      if (java.lang.Double.doubleToLongBits(this.mirrorArea)
          != java.lang.Double.doubleToLongBits(0D)) {
        output.writeDouble(5, this.mirrorArea);
      }
      if (this.pointing != null) {
        output.writeMessage(6, this.pointing);
      }
      if (java.lang.Double.doubleToLongBits(this.sampleDuration)
          != java.lang.Double.doubleToLongBits(0D)) {
        output.writeDouble(7, this.sampleDuration);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.pixels != null && this.pixels.length > 0) {
        for (int i = 0; i < this.pixels.length; i++) {
          streams.cta.io.datamodel.nano.L0.CircleParams element = this.pixels[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      if (java.lang.Double.doubleToLongBits(this.rotation)
          != java.lang.Double.doubleToLongBits(0D)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeDoubleSize(2, this.rotation);
      }
      if (java.lang.Double.doubleToLongBits(this.focLength)
          != java.lang.Double.doubleToLongBits(0D)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeDoubleSize(3, this.focLength);
      }
      if (this.numMirrors != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(4, this.numMirrors);
      }
      if (java.lang.Double.doubleToLongBits(this.mirrorArea)
          != java.lang.Double.doubleToLongBits(0D)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeDoubleSize(5, this.mirrorArea);
      }
      if (this.pointing != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(6, this.pointing);
      }
      if (java.lang.Double.doubleToLongBits(this.sampleDuration)
          != java.lang.Double.doubleToLongBits(0D)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeDoubleSize(7, this.sampleDuration);
      }
      return size;
    }

    @Override
    public CameraGeometry mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.pixels == null ? 0 : this.pixels.length;
            streams.cta.io.datamodel.nano.L0.CircleParams[] newArray =
                new streams.cta.io.datamodel.nano.L0.CircleParams[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.pixels, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new streams.cta.io.datamodel.nano.L0.CircleParams();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new streams.cta.io.datamodel.nano.L0.CircleParams();
            input.readMessage(newArray[i]);
            this.pixels = newArray;
            break;
          }
          case 17: {
            this.rotation = input.readDouble();
            break;
          }
          case 25: {
            this.focLength = input.readDouble();
            break;
          }
          case 32: {
            this.numMirrors = input.readInt32();
            break;
          }
          case 41: {
            this.mirrorArea = input.readDouble();
            break;
          }
          case 50: {
            if (this.pointing == null) {
              this.pointing = new streams.cta.io.datamodel.nano.L0.CameraLocation();
            }
            input.readMessage(this.pointing);
            break;
          }
          case 57: {
            this.sampleDuration = input.readDouble();
            break;
          }
        }
      }
    }

    public static CameraGeometry parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new CameraGeometry(), data);
    }

    public static CameraGeometry parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new CameraGeometry().mergeFrom(input);
    }
  }

  public static final class CameraEvent extends
      com.google.protobuf.nano.MessageNano {

    private static volatile CameraEvent[] _emptyArray;
    public static CameraEvent[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new CameraEvent[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional sfixed32 telescopeID = 1 [default = -1];
    public int telescopeID;

    // optional double dateMJD = 2 [default = 0];
    public double dateMJD;

    // optional .streams.cta.io.datamodel.EventType eventType = 3 [default = NONE];
    public int eventType;

    // optional fixed32 eventNumber = 4 [default = 0];
    public int eventNumber;

    // optional fixed32 arrayEvtNum = 5 [default = 0];
    public int arrayEvtNum;

    // optional .streams.cta.io.datamodel.PixelsChannel hiGain = 6;
    public streams.cta.io.datamodel.nano.L0.PixelsChannel hiGain;

    // optional .streams.cta.io.datamodel.PixelsChannel loGain = 7;
    public streams.cta.io.datamodel.nano.L0.PixelsChannel loGain;

    // optional .streams.cta.io.datamodel.CameraTrigger trig = 8;
    public streams.cta.io.datamodel.nano.L0.CameraTrigger trig;

    // optional .streams.cta.io.datamodel.CameraRunHeader head = 9;
    public streams.cta.io.datamodel.nano.L0.CameraRunHeader head;

    // optional .streams.cta.io.datamodel.CircleParams muon = 10;
    public streams.cta.io.datamodel.nano.L0.CircleParams muon;

    // optional .streams.cta.io.datamodel.CameraGeometry geometry = 11;
    public streams.cta.io.datamodel.nano.L0.CameraGeometry geometry;

    // optional sfixed32 hilo_offset = 12;
    public int hiloOffset;

    // optional sfixed32 hilo_scale = 13;
    public int hiloScale;

    public CameraEvent() {
      clear();
    }

    public CameraEvent clear() {
      telescopeID = -1;
      dateMJD = 0D;
      eventType = streams.cta.io.datamodel.nano.L0.NONE;
      eventNumber = 0;
      arrayEvtNum = 0;
      hiGain = null;
      loGain = null;
      trig = null;
      head = null;
      muon = null;
      geometry = null;
      hiloOffset = 0;
      hiloScale = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.telescopeID != -1) {
        output.writeSFixed32(1, this.telescopeID);
      }
      if (java.lang.Double.doubleToLongBits(this.dateMJD)
          != java.lang.Double.doubleToLongBits(0D)) {
        output.writeDouble(2, this.dateMJD);
      }
      if (this.eventType != streams.cta.io.datamodel.nano.L0.NONE) {
        output.writeInt32(3, this.eventType);
      }
      if (this.eventNumber != 0) {
        output.writeFixed32(4, this.eventNumber);
      }
      if (this.arrayEvtNum != 0) {
        output.writeFixed32(5, this.arrayEvtNum);
      }
      if (this.hiGain != null) {
        output.writeMessage(6, this.hiGain);
      }
      if (this.loGain != null) {
        output.writeMessage(7, this.loGain);
      }
      if (this.trig != null) {
        output.writeMessage(8, this.trig);
      }
      if (this.head != null) {
        output.writeMessage(9, this.head);
      }
      if (this.muon != null) {
        output.writeMessage(10, this.muon);
      }
      if (this.geometry != null) {
        output.writeMessage(11, this.geometry);
      }
      if (this.hiloOffset != 0) {
        output.writeSFixed32(12, this.hiloOffset);
      }
      if (this.hiloScale != 0) {
        output.writeSFixed32(13, this.hiloScale);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.telescopeID != -1) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeSFixed32Size(1, this.telescopeID);
      }
      if (java.lang.Double.doubleToLongBits(this.dateMJD)
          != java.lang.Double.doubleToLongBits(0D)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeDoubleSize(2, this.dateMJD);
      }
      if (this.eventType != streams.cta.io.datamodel.nano.L0.NONE) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(3, this.eventType);
      }
      if (this.eventNumber != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFixed32Size(4, this.eventNumber);
      }
      if (this.arrayEvtNum != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFixed32Size(5, this.arrayEvtNum);
      }
      if (this.hiGain != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(6, this.hiGain);
      }
      if (this.loGain != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(7, this.loGain);
      }
      if (this.trig != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(8, this.trig);
      }
      if (this.head != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(9, this.head);
      }
      if (this.muon != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(10, this.muon);
      }
      if (this.geometry != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(11, this.geometry);
      }
      if (this.hiloOffset != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeSFixed32Size(12, this.hiloOffset);
      }
      if (this.hiloScale != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeSFixed32Size(13, this.hiloScale);
      }
      return size;
    }

    @Override
    public CameraEvent mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 13: {
            this.telescopeID = input.readSFixed32();
            break;
          }
          case 17: {
            this.dateMJD = input.readDouble();
            break;
          }
          case 24: {
            int value = input.readInt32();
            switch (value) {
              case streams.cta.io.datamodel.nano.L0.NONE:
              case streams.cta.io.datamodel.nano.L0.PHYSICAL:
              case streams.cta.io.datamodel.nano.L0.PEDESTAL:
              case streams.cta.io.datamodel.nano.L0.LIGHT_PULSER:
                this.eventType = value;
                break;
            }
            break;
          }
          case 37: {
            this.eventNumber = input.readFixed32();
            break;
          }
          case 45: {
            this.arrayEvtNum = input.readFixed32();
            break;
          }
          case 50: {
            if (this.hiGain == null) {
              this.hiGain = new streams.cta.io.datamodel.nano.L0.PixelsChannel();
            }
            input.readMessage(this.hiGain);
            break;
          }
          case 58: {
            if (this.loGain == null) {
              this.loGain = new streams.cta.io.datamodel.nano.L0.PixelsChannel();
            }
            input.readMessage(this.loGain);
            break;
          }
          case 66: {
            if (this.trig == null) {
              this.trig = new streams.cta.io.datamodel.nano.L0.CameraTrigger();
            }
            input.readMessage(this.trig);
            break;
          }
          case 74: {
            if (this.head == null) {
              this.head = new streams.cta.io.datamodel.nano.L0.CameraRunHeader();
            }
            input.readMessage(this.head);
            break;
          }
          case 82: {
            if (this.muon == null) {
              this.muon = new streams.cta.io.datamodel.nano.L0.CircleParams();
            }
            input.readMessage(this.muon);
            break;
          }
          case 90: {
            if (this.geometry == null) {
              this.geometry = new streams.cta.io.datamodel.nano.L0.CameraGeometry();
            }
            input.readMessage(this.geometry);
            break;
          }
          case 101: {
            this.hiloOffset = input.readSFixed32();
            break;
          }
          case 109: {
            this.hiloScale = input.readSFixed32();
            break;
          }
        }
      }
    }

    public static CameraEvent parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new CameraEvent(), data);
    }

    public static CameraEvent parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new CameraEvent().mergeFrom(input);
    }
  }

  public static final class PacketLibData extends
      com.google.protobuf.nano.MessageNano {

    private static volatile PacketLibData[] _emptyArray;
    public static PacketLibData[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PacketLibData[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional bytes data = 1;
    public byte[] data;

    public PacketLibData() {
      clear();
    }

    public PacketLibData clear() {
      data = com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!java.util.Arrays.equals(this.data, com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
        output.writeBytes(1, this.data);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!java.util.Arrays.equals(this.data, com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(1, this.data);
      }
      return size;
    }

    @Override
    public PacketLibData mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.data = input.readBytes();
            break;
          }
        }
      }
    }

    public static PacketLibData parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PacketLibData(), data);
    }

    public static PacketLibData parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PacketLibData().mergeFrom(input);
    }
  }

  public static final class ShowerParams extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ShowerParams[] _emptyArray;
    public static ShowerParams[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ShowerParams[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional float azimuth = 1;
    public float azimuth;

    // optional float altitude = 2;
    public float altitude;

    // optional float start_alt = 3;
    public float startAlt;

    // optional float max_alt = 4;
    public float maxAlt;

    // optional float ch_max_alt = 5;
    public float chMaxAlt;

    public ShowerParams() {
      clear();
    }

    public ShowerParams clear() {
      azimuth = 0F;
      altitude = 0F;
      startAlt = 0F;
      maxAlt = 0F;
      chMaxAlt = 0F;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (java.lang.Float.floatToIntBits(this.azimuth)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(1, this.azimuth);
      }
      if (java.lang.Float.floatToIntBits(this.altitude)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(2, this.altitude);
      }
      if (java.lang.Float.floatToIntBits(this.startAlt)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(3, this.startAlt);
      }
      if (java.lang.Float.floatToIntBits(this.maxAlt)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(4, this.maxAlt);
      }
      if (java.lang.Float.floatToIntBits(this.chMaxAlt)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(5, this.chMaxAlt);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (java.lang.Float.floatToIntBits(this.azimuth)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(1, this.azimuth);
      }
      if (java.lang.Float.floatToIntBits(this.altitude)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(2, this.altitude);
      }
      if (java.lang.Float.floatToIntBits(this.startAlt)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(3, this.startAlt);
      }
      if (java.lang.Float.floatToIntBits(this.maxAlt)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(4, this.maxAlt);
      }
      if (java.lang.Float.floatToIntBits(this.chMaxAlt)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(5, this.chMaxAlt);
      }
      return size;
    }

    @Override
    public ShowerParams mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 13: {
            this.azimuth = input.readFloat();
            break;
          }
          case 21: {
            this.altitude = input.readFloat();
            break;
          }
          case 29: {
            this.startAlt = input.readFloat();
            break;
          }
          case 37: {
            this.maxAlt = input.readFloat();
            break;
          }
          case 45: {
            this.chMaxAlt = input.readFloat();
            break;
          }
        }
      }
    }

    public static ShowerParams parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ShowerParams(), data);
    }

    public static ShowerParams parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ShowerParams().mergeFrom(input);
    }
  }

  public static final class ArrayEvent extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ArrayEvent[] _emptyArray;
    public static ArrayEvent[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ArrayEvent[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional .streams.cta.io.datamodel.ArrayTrigger triggerData = 1;
    public streams.cta.io.datamodel.nano.L0.ArrayTrigger triggerData;

    // repeated .streams.cta.io.datamodel.CameraEvent cameraData = 2;
    public streams.cta.io.datamodel.nano.L0.CameraEvent[] cameraData;

    // optional .streams.cta.io.datamodel.ShowerParams shower_params = 3;
    public streams.cta.io.datamodel.nano.L0.ShowerParams showerParams;

    public ArrayEvent() {
      clear();
    }

    public ArrayEvent clear() {
      triggerData = null;
      cameraData = streams.cta.io.datamodel.nano.L0.CameraEvent.emptyArray();
      showerParams = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.triggerData != null) {
        output.writeMessage(1, this.triggerData);
      }
      if (this.cameraData != null && this.cameraData.length > 0) {
        for (int i = 0; i < this.cameraData.length; i++) {
          streams.cta.io.datamodel.nano.L0.CameraEvent element = this.cameraData[i];
          if (element != null) {
            output.writeMessage(2, element);
          }
        }
      }
      if (this.showerParams != null) {
        output.writeMessage(3, this.showerParams);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.triggerData != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(1, this.triggerData);
      }
      if (this.cameraData != null && this.cameraData.length > 0) {
        for (int i = 0; i < this.cameraData.length; i++) {
          streams.cta.io.datamodel.nano.L0.CameraEvent element = this.cameraData[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(2, element);
          }
        }
      }
      if (this.showerParams != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(3, this.showerParams);
      }
      return size;
    }

    @Override
    public ArrayEvent mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            if (this.triggerData == null) {
              this.triggerData = new streams.cta.io.datamodel.nano.L0.ArrayTrigger();
            }
            input.readMessage(this.triggerData);
            break;
          }
          case 18: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 18);
            int i = this.cameraData == null ? 0 : this.cameraData.length;
            streams.cta.io.datamodel.nano.L0.CameraEvent[] newArray =
                new streams.cta.io.datamodel.nano.L0.CameraEvent[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.cameraData, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new streams.cta.io.datamodel.nano.L0.CameraEvent();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new streams.cta.io.datamodel.nano.L0.CameraEvent();
            input.readMessage(newArray[i]);
            this.cameraData = newArray;
            break;
          }
          case 26: {
            if (this.showerParams == null) {
              this.showerParams = new streams.cta.io.datamodel.nano.L0.ShowerParams();
            }
            input.readMessage(this.showerParams);
            break;
          }
        }
      }
    }

    public static ArrayEvent parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ArrayEvent(), data);
    }

    public static ArrayEvent parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ArrayEvent().mergeFrom(input);
    }
  }
}
